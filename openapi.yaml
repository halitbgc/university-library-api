openapi: 3.0.3 # OpenAPI sürümünü belirtiyor
info:
  title: University Library API # API’nin adı
  description: Üniversite kütüphanesi için RESTful API tanımı # Açıklama
  version: 1.0.0 # Versiyon
servers:
  - url: https://api.university-library.edu.tr/v1 # API'ye istek atılacak adres
  
components:
  schemas:
    Book:
      type: object
      required: [id, title, author, isbn, publisher, pageCount, stock]
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        author:
          type: string
        isbn:
          type: string
          format: isbn
        publisher:
          type: string
        pageCount:
          type: integer
        stock:
          type: integer
    Student:
      type: object
      required: [id, name, studentNumber, email, isActive]
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        studentNumber:
          type: string
        email:
          type: string
          format: email
        isActive:
          type: boolean
    Loan:
      type: object
      required: [id, studentId, bookId, loanDate, status]
      properties:
        id:
          type: string
          format: uuid
        studentId:
          type: string
          format: uuid
        bookId:
          type: string
          format: uuid
        loanDate:
          type: string
          format: date
        returnDate:
          type: string
          format: date
          nullable: true
        status:
          type: string
          enum: [ongoing, returned, late]

paths:
  /books:
    get:
      summary: Tüm kitapları getir
      tags:
        - books
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: size
          schema:
            type: integer
      responses:
        '200':
          description: Başarılı
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Yeni kitap ekle
      tags:
        - books
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
            example:
              id: "d290f1ee-6c54-4b01-90e6-d701748f0851"
              title: "Yapay Zeka 101"
              author: "Halit Bağcı"
              isbn: "978-3-16-148410-0"
              publisher: "Marmara Yayınları"
              pageCount: 250
              stock: 5
      responses:
        '201':
          description: Kitap başarıyla eklendi
        '400':
          description: Geçersiz veri gönderildi
          
  /books/{id}:
    get:
      summary: Belirli bir kitabı getir
      tags:
        - books
      parameters:
        - name: id
          in: path
          required: true
          description: Kitabın UUID değeri
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Kitap bilgisi bulundu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Kitap bulunamadı
    put:
      summary: Kitap bilgilerini güncelle
      tags:
        - books
      parameters:
        - name: id
          in: path
          required: true
          description: Güncellenecek kitabın UUID değeri
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
            example:
              id: "d290f1ee-6c54-4b01-90e6-d701748f0851"
              title: "Gelişmiş Yapay Zeka"
              author: "Halit Bağcı"
              isbn: "978-3-16-148410-0"
              publisher: "Marmara Yayınları"
              pageCount: 300
              stock: 8
      responses:
        '200':
          description: Kitap başarıyla güncellendi
        '400':
          description: Geçersiz veri gönderildi
        '404':
          description: Kitap bulunamadı
    delete:
      summary: Kitabı sil
      tags:
        - books
      parameters:
        - name: id
          in: path
          required: true
          description: Silinecek kitabın UUID değeri
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Kitap başarıyla silindi (gövde yok)
        '404':
          description: Kitap bulunamadı
          
  /students:
    get:
      summary: Tüm öğrencileri getir
      tags:
        - students
      responses:
        '200':
          description: Öğrenci listesi başarıyla getirildi
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
    post:
      summary: Yeni öğrenci ekle
      tags:
        - students
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
            example:
              id: "cba12eec-52dd-4f77-9a90-faa911e8de23"
              name: "Halit Bağcı"
              studentNumber: "20231234"
              email: "halitbagci@marun.edu.tr"
              isActive: true
      responses:
        '201':
          description: Öğrenci başarıyla eklendi
        '400':
          description: Geçersiz veri gönderildi

  /students/{id}:
    get:
      summary: Belirli öğrenciyi getir
      tags:
        - students
      parameters:
        - name: id
          in: path
          required: true
          description: Öğrencinin UUID değeri
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Öğrenci bilgisi bulundu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Öğrenci bulunamadı
    put:
      summary: Öğrenci bilgilerini güncelle
      tags:
        - students
      parameters:
        - name: id
          in: path
          required: true
          description: Güncellenecek öğrencinin UUID değeri
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
            example:
              id: "cba12eec-52dd-4f77-9a90-faa911e8de23"
              name: "Halit Bağcı"
              studentNumber: "20231234"
              email: "halitbagci@marun.edu.tr"
              isActive: false
      responses:
        '200':
          description: Öğrenci başarıyla güncellendi
        '400':
          description: Geçersiz veri gönderildi
        '404':
          description: Öğrenci bulunamadı
    delete:
      summary: Öğrenciyi sil
      tags:
        - students
      parameters:
        - name: id
          in: path
          required: true
          description: Silinecek öğrencinin UUID değeri
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Öğrenci başarıyla silindi
        '404':
          description: Öğrenci bulunamadı

  /loans:
    get:
      summary: Tüm ödünç alma işlemlerini getir
      tags:
        - loans
      responses:
        '200':
          description: Ödünç işlemleri listesi
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Loan'
    post:
      summary: Yeni ödünç alma işlemi oluştur
      tags:
        - loans
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
            example:
              id: "91a2c26e-bb92-4a3b-b1f4-3b37a1ff6b20"
              studentId: "cba12eec-52dd-4f77-9a90-faa911e8de23"
              bookId: "d290f1ee-6c54-4b01-90e6-d701748f0851"
              loanDate: "2025-05-26"
              returnDate: null
              status: "ongoing"
      responses:
        '201':
          description: Ödünç alma işlemi başarıyla oluşturuldu
        '400':
          description: Geçersiz veri gönderildi


  /loans/{id}:
    get:
      summary: Belirli bir ödünç alma işlemini getir
      tags:
        - loans
      parameters:
        - name: id
          in: path
          required: true
          description: Ödünç alma işleminin UUID değeri
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: İşlem bulundu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        '404':
          description: İşlem bulunamadı
  /loans/{id}/return:
    patch:
      summary: Kitabı iade et
      tags:
        - loans
      parameters:
        - name: id
          in: path
          required: true
          description: İade edilecek işlem ID'si
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Kitap başarıyla iade edildi
        '404':
          description: İşlem bulunamadı






